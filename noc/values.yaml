# Default values for noc.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: registry.getnoc.com/noc/noc
  tag: 19.3.1
  pullPolicy: IfNotPresent

service_config:
  global:
    bi:
      count: 1
      nodeSelector: {}
      affinity: {}
    card:
      count: 1
      nodeSelector: {}
      affinity: {}
    chwriter:
      count: 1
      nodeSelector: {}
      affinity: {}
    datasource:
      count: 1
      nodeSelector: {}
      affinity: {}
    datastream:
      count: 1
      nodeSelector: {}
      affinity: {}
    escalator:
      count: 1
      nodeSelector: {}
      affinity: {}
    front:
      count: 1
      nodeSelector: {}
      affinity: {}
    grafanads:
      count: 1
      nodeSelector: {}
      affinity: {}
    login:
      count: 1
      nodeSelector: {}
      affinity: {}
    mailsender:
      count: 1
      nodeSelector: {}
      affinity: {}
    mib:
      count: 1
      nodeSelector: {}
      affinity: {}
    mrt:
      count: 1
      nodeSelector: {}
      affinity: {}
    nbi:
      count: 1
      nodeSelector: {}
      affinity: {}
    sae:
      count: 1
      nodeSelector: {}
      affinity: {}
    scheduler:
      count: 1
      nodeSelector: {}
      affinity: {}
    static:
      count: 1
      nodeSelector: {}
      affinity: {}
    selfmon:
      count: 1
      nodeSelector: {}
      affinity: {}
    tgsender:
      count: 1
      nodeSelector: {}
      affinity: {}
    web:
      count: 1
      nodeSelector: {}
      affinity: {}
  pools:
    default:
      description: "Default pool"
      activator:
        count: 1
        nodeSelector:
          pool: default
        affinity: {}
      classifier:
        count: 1
        nodeSelector: {}
        affinity: {}
      correlator:
        count: 1
        nodeSelector: {}
        affinity: {}
      discovery:
        count: 1
        nodeSelector: {}
        affinity: {}
      ping:
        count: 1
        nodeSelector:
          pool: default
        affinity: {}
      syslogcollector:
        count: 1
        nodeSelector:
          pool: default
        affinity: {}
      trapcollector:
        count: 1
        nodeSelector:
          pool: default
        affinity: {}
#    second:
#      description: "Default2 pool"
#      activator:
#        count: 1
#        nodeSelector:
#          pool: second
#        affinity: {}
#      classifier:
#        count: 1
#        nodeSelector: {}
#        affinity: {}
#      correlator:
#        count: 1
#        nodeSelector: {}
#        affinity: {}
#      discovery:
#        count: 1
#        nodeSelector: {}
#        affinity: {}
#      ping:
#        count: 1
#        nodeSelector:
#          pool: second
#        affinity: {}
#      syslogcollector:
#        count: 1
#        nodeSelector:
#          pool: second
#        affinity: {}
#      trapcollector:
#        count: 1
#        nodeSelector:
#          pool: second
#        affinity: {}

nocExtraConfiguration: |
  NOC_LOGLEVEL: info

noc_web:
  address: noc-k8s.getnoc.com
  tls_secretName: noc-k8s.getnoc.com-tls
  # will not be changed. Only for initial setup
  # initial user name is admin
  initial_admin_password: admin
  initial_admin_email: test@example.com

clickhouse:
  enabled: true
  users:
    ro_user_name: default
    ro_user_password: noc
    rw_user_name: noc
    rw_user_password: noc

  persistentVolume:
    accessModes:
      - ReadWriteOnce
    size: 2Gi

nsqd:
  enabled: true
  replicaCount:
    admin: 1
    nsqd: 1
    lookupd: 1

postgresql:
  enabled: true
  postgresqlUsername: noc
  postgresqlPassword: noc
  postgresqlDatabase: noc
  pgHbaConfiguration: |-
    local all all trust
    host all all localhost trust
    host noc noc 0.0.0.0/0 password
  persistence:
    size: 1Gi

consul:
  enabled: true
  global:
    image: "consul:1.5.2"
  server:
    replicas: 1
    bootstrapExpect: 1  # Should <= replicas count
    storage: 1Gi
    disruptionBudget:
      enabled: false
  client:
    enabled: "False"
  ui:
    enabled: "True"
  syncCatalog:
    enabled: false
    toConsul: false
    toK8S: false
  connectInject:
    enabled: false
    default: false  # true will inject by default, otherwise requires annotation
    namespaceSelector: null

mongodb:
  enabled: true
  mongodbRootPassword: noc
  mongodbUsername: noc
  mongodbPassword: noc
  mongodbDatabase: noc
  mongodbExtraFlags: ["--wiredTigerCacheSizeGB=2" ]
  replicaSet:
    name: noc
    replicas:
      secondary: 0
      arbiter: 0
    pdb:
      enabled: false
      minAvailable:
        primary: 1
        secondary: 0
        arbiter: 0
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 256Mi
  persistence:
    size: 1Gi

grafana:
  rbac:
    create: true
    pspEnabled: false
    pspUseAppArmor: false
    namespaced: false
  image:
    repository: grafana/grafana
    tag: 6.2.5
    pullPolicy: IfNotPresent
  plugins:
    - grafana-simple-json-datasource 1.3.5
    - vertamedia-clickhouse-datasource 1.4.3


# we are not expecting any changes below this line. change it when you know what are you doing
#-------------------------------------------------------------------------------
resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  activator:
    limits:
      cpu: 250m
      memory: 150Mi
    requests:
      cpu: 50m
      memory: 150Mi
  bi:
    limits:
      cpu: 500m
      memory: 100Mi
    requests:
      cpu: 50m
      memory: 100Mi
  card:
    limits:
      cpu: 500m
      memory: 150Mi
    requests:
      cpu: 50m
      memory: 150Mi
  chwriter:
    limits:
      cpu: 250m
      memory: 90Mi
    requests:
      cpu: 50m
      memory: 90Mi
  classifier:
    limits:
      cpu: 1
      memory: 120Mi
    requests:
      cpu: 50m
      memory: 120Mi
  correlator:
    limits:
      cpu: 1
      memory: 120Mi
    requests:
      cpu: 50m
      memory: 120Mi
  datasource:
    limits:
      cpu: 500m
      memory: 300Mi
    requests:
      cpu: 50m
      memory: 300Mi
  datastream:
    limits:
      cpu: 500m
      memory: 110Mi
    requests:
      cpu: 50m
      memory: 110Mi
  discovery:
    limits:
      cpu: 1
      memory: 150Mi
    requests:
      cpu: 50m
      memory: 150Mi
  escalator:
    limits:
      cpu: 100m
      memory: 90Mi
    requests:
      cpu: 100m
      memory: 90Mi
  front:
    limits:
      cpu: 500m
      memory: 50Mi
    requests:
      cpu: 10m
      memory: 50Mi
  grafanads:
    limits:
      cpu: 100m
      memory: 110Mi
    requests:
      cpu: 50m
      memory: 110Mi
  login:
    limits:
      cpu: 250m
      memory: 75Mi
    requests:
      cpu: 50m
      memory: 75Mi
  mailsender:
    limits:
      cpu: 100m
      memory: 52Mi
    requests:
      cpu: 50m
      memory: 52Mi
  mib:
    limits:
      cpu: 100m
      memory: 100Mi
    requests:
      cpu: 100m
      memory: 100Mi
  mrt:
    limits:
      cpu: 100m
      memory: 103Mi
    requests:
      cpu: 50m
      memory: 103Mi
  nbi:
    limits:
      cpu: 250m
      memory: 100Mi
    requests:
      cpu: 50m
      memory: 100Mi
  ping:
    limits:
      cpu: 100m
      memory: 50Mi
    requests:
      cpu: 50m
      memory: 50Mi
  sae:
    limits:
      cpu: 500m
      memory: 85Mi
    requests:
      cpu: 50m
      memory: 85Mi
  scheduler:
    limits:
      cpu: 100m
      memory: 150Mi
    requests:
      cpu: 50m
      memory: 150Mi
  selfmon:
    limits:
      cpu: 250m
      memory: 110Mi
    requests:
      cpu: 50m
      memory: 110Mi
  static:
    limits:
      cpu: 10m
      memory: 50Mi
    requests:
      cpu: 10m
      memory: 50Mi
  syslogcollector:
    limits:
      cpu: 200m
      memory: 80Mi
    requests:
      cpu: 50m
      memory: 80Mi
  tgsender:
    limits:
      cpu: 100m
      memory: 52Mi
    requests:
      cpu: 100m
      memory: 52Mi
  trapcollector:
    limits:
      cpu: 200m
      memory: 80Mi
    requests:
      cpu: 50m
      memory: 80Mi
  web:
    limits:
      cpu: 1
      memory: 120Mi
    requests:
      cpu: 50m
      memory: 120Mi

# if you are using custom image and have to authenticate to pull image
# here it is
imagePullSecrets: []

# Quotas
# You do not want to add this manifest to you production environment.
# You mostly don't want to add this to even you test environment without changes.
# Quota will break your environment and eat your hamburger instead of you.
quotas:
  enable: false

tolerations:
  activator: []
  bi: []
  card: []
  chwriter: []
  classifier: []
  correlator: []
  datasource: []
  datastream: []
  discovery: []
  escalator: []
  front: []
  grafanads: []
  login: []
  mailsender: []
  mib: []
  mrt: []
  nbi: []
  ping: []
  sae: []
  scheduler: []
  selfmon: []
  static: []
  syslogcollector: []
  tgsender: []
  trapcollector: []
  web: []

rbac:
  # Specifies whether RBAC resources should be created
  create: false

serviceAccount:
  # Specifies whether a ServiceAccount should be created
  create: false
  # The name of the ServiceAccount to use.
  # If not set and create is true, a name is generated using the fullname template
  name: noc-service-account

priorityClass:
  create: false
  classValue:
    activator:        1000005
    bi:               900000
    card:             1000005
    chwriter:         1000005
    classifier:       1000005
    correlator:       1000005
    datasource:       1000005
    datastream:       1000005
    discovery:        1000005
    escalator:        1000005
    grafanads:        1000005
    login:            1000005
    mailsender:       1000005
    mib:              500000
    mrt:              1000005
    nbi:              1000005
    nginx:            1000005
    ping:             1000005
    sae:              1000005
    scheduler:        1000005
    selfmon:          1000005
    syslogcollector:  1000005
    tgsender:         1000005
    trapcollector:    1000005
    web:              1000005
