---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "noc.static.fullname" . }}
  labels:
    service: static
{{ include "noc.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.service_config.global.static.count }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "noc.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      service: static
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "noc.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        service: static
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.nocInitContainer }}
      {{- toYaml . | nindent 6 }}
    {{- end }}
      containers:
        - command: null
          image: "{{ .Values.image.repository }}/static:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          livenessProbe:
            httpGet:
              path: /ng_stats
              port: 81
            initialDelaySeconds: 10
          name: nginx
          ports:
            - containerPort: 80
              name: http
          readinessProbe:
            httpGet:
              path: /ng_stats
              port: 81
            initialDelaySeconds: 5
          resources:
            {{- toYaml .Values.resources.static | nindent 12 }}
          volumeMounts:
            - mountPath: /etc/nginx
              name: {{ .Release.Name }}-static-nginx-configmap
              readOnly: true
    {{- if .Values.priorityClass.create }}
      priorityClassName: noc-nginx
    {{- end }}
      volumes:
        - configMap:
            items:
              - key: nginx.conf
                path: nginx.conf
              - key: noc.conf
                path: conf.d/noc.conf
              - key: hc.conf
                path: conf.d/hc.conf
              - key: mime.types
                path: mime.types
            name: {{ .Release.Name }}-static-nginx-configmap
          name: {{ .Release.Name }}-static-nginx-configmap
    {{- if .Values.rbac.create }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
    {{- end}}
      {{- with .Values.service_config.global.static.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.service_config.global.static.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations.static }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
